type Actor {
  id: ID!
  name: String!
  position: ActorPosition!
  qualification: String
  career: String
  commitments: [Commitment]
}

enum ActorPosition {
  EXECUTIVE_FACILITATOR
  PROJECT_FACILITATOR
  ASSISTANT_FACILITATOR
  PROFESSIONAL
  EXPERT_STAFF
  SENIOR_STAFF
  ASSISTANT_STAFF
  NEW_FACE
}

type Cell {
  id: ID!
  name: String!
  type: CellType
  purposes: String
  offers: String
  commitments: [Commitment]
  contracts: [Contract]
  accountings: [Accounting]
}

enum CellType {
  INNER # 内部セル
  OUTER # 外部セル
}

type Organization {
  id: ID!
  name: String!
  type: OrganizationType!
  contracts: [Contract]
  accountings: [Accounting]
}

enum OrganizationType {
  SELF # AgileCore
  SUPPLIER # ベンダ
  CUSTOMER # 取引先, 顧客
  # MARKET # 市場, 業界
}

type Market {
  id: ID!
  name: String!
}

type Commitment @relation(name: "COMMITMENT", direction: "BOTH") {
  from: Actor
  to: Cell
  fromDate: Date!
  toDate: Date
  paymentBase: String # time/capability
  utilization: Int # 稼働率
  rate: Int # 単価 (¥/points)
  asFacilitator: Boolean!
  isReservation: Boolean!
  description: String
  appraisals: Appraisal
}

enum Appraisal {
  NEGATIVE
  NEUTRAL
  POSITIVE
}

type Contract @relation(name: "CONTRACT", direction: "BOTH") {
  from: Cell
  to: Organization
  fromDate: Date!
  toDate: Date
  description: String
}

type Accounting @relation(name: "ACCOUNTING", direction: "BOTH") {
  from: Cell
  to: Organization
  contract: String!
  year: Int!
  month: Int!
  expence: Int # 支払 (to Actor)
  cost: Int # 費用 (exept expence above)
  sales: Int # 売上
  receivable: Int # 売掛
  payable: Int # 買掛
  asset: Int # 資産
  debt: Int # 負債
}
